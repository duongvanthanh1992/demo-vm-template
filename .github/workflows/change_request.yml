name: Ansible Pipeline for ServiceNow Change Request
run-name: >
  Change Request Number : ${{ inputs.change_request_number }} -
  Branch : ${{ github.ref_name }} -
  Site : ${{ inputs.build_site }}

on: 
  workflow_dispatch:
    inputs:

      build_site:
        type: choice
        description: "Environments for deployment. Used for Github Action.(e.g. SAT, PRD...)"
        required: true
        default: "sat-sg1"
        options:
          - "sat-sg1"
          - "prd-sg1"

      change_request_number: 
        description: "Enter the ServiceNow Change Request number (e.g., CHG0031292)"
        required: true
        default: "CHG0031292"

      host_clear_snapshot:
        description: "Enter the hostname to clear all VM snapshots on (leave blank if you do not want to clear snapshots on any host)."
        required: false
        default: ""

permissions:
  contents: read
  packages: read

env:
  ANSIBLE_COLLECTIONS_PATHS: /root/.ansible/collections:/usr/share/ansible/collections

jobs:
  pre:
    runs-on: [self-hosted]
    container:
      image: ubuntu:20.04
    steps:
      - uses: actions/checkout@v4

      - name: Load env from default location
        run: >-
          grep -v -e '^\s*#' -e '^\s*$' "build-env/${{ inputs.build_site }}.env"
          >> $GITHUB_ENV
    outputs:
      ansible_image: ${{ env.PACKAGES_CONTAINER }}
      ansible_runner: ${{ env.RUNNER_TAG }}

  build-template:
    needs: [pre]
    runs-on: [self-hosted, "${{ needs.pre.outputs.ansible_runner }}"]
    environment: "${{ inputs.build_site }}"
    container:
          image: "${{ needs.pre.outputs.ansible_image }}"
          volumes:
            - /var/run/docker.sock:/var/run/docker.sock
          credentials:
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Load env from default location
        run: >-
          grep -v -e '^\s*#' -e '^\s*$' "build-env/${{ inputs.build_site }}.env"
          >> $GITHUB_ENV

      # DEBUG
      - name: Print env
        run: |
          printenv

      # DEBUG
      - name: Print ansible version
        run: |
          ansible-playbook --version
          ansible-galaxy role list || true
          ansible-galaxy collection list || true

      - name: Copy file private key && Set Permission
        working-directory: build-env/
        run: |
          chmod 600 spec_rsa
          cp spec_rsa ../ansible/
          cp spec_rsa ../packer/
          cp spec_rsa ../serverspec/
          chmod +x ../serverspec/start.sh

      # DEBUG
      - name: Check Permission
        working-directory: ./
        run: |
          ls -l build-env/spec_rsa
          ls -l ansible/spec_rsa
          ls -l packer/spec_rsa
          ls -l serverspec/spec_rsa
          ls -l serverspec/start.sh

      - name: Run Ansible
        id: ansible
        working-directory: ansible/
        run: >-
          ansible-playbook
          -i inventories/${{ inputs.build_site }}/hosts
          -e "vsphere_endpoint=${{ secrets.VSPHERE_HOSTNAME }}"
          -e "vsphere_username=${{ secrets.VSPHERE_USER }}"
          -e "vsphere_password=${{ secrets.VSPHERE_PASSWORD }}"
          -e "snapshot_name_chg=${{ inputs.change_request_number }}"
          -e "host_clear_snapshot=${{ input.host_clear_snapshot }}"
          vcenter-change-request.yml

      # - name: Clean Ansible
      #   if: ${{ failure() && steps.ansible.outcome == 'failure' }}
      #   working-directory: ansible/
      #   run: >-
      #     ansible-playbook
      #     -i inventories/${{ inputs.build_site }}/hosts
      #     -e "vsphere_endpoint=${{ secrets.VSPHERE_HOSTNAME }}"
      #     -e "vsphere_username=${{ secrets.VSPHERE_USER }}"
      #     -e "vsphere_password=${{ secrets.VSPHERE_PASSWORD }}"
      #     -e "vsphere_template_final=${{ env.PACKER_TEMPLATE_NAME }}-final"
      #     clear-template.yml
