---
- name: Get detailed VM hardware information for network adapters
  community.vmware.vmware_guest_info:
    hostname: "{{ vsphere_endpoint }}"
    username: "{{ vsphere_username }}"
    password: "{{ vsphere_password }}"
    validate_certs: "{{ vsphere_validate }}"
    name: "{{ vm_name }}"
    schema: "vsphere"
    properties:
      - "config.hardware.device"
  delegate_to: localhost
  register: _vm_hardware_info

- name: Extract network adapter information
  set_fact:
    _list_network_adapters: >-
      {{ _vm_hardware_info.instance.config.hardware.device 
          | selectattr('deviceInfo.label', 'match', 'Network adapter.*') 
          | list }}

- name: Display network adapters found
  debug:
    msg: 
      - "Found {{ _list_network_adapters | length }} network adapter(s)"
      - "Network adapters: {{ _list_network_adapters | map(attribute='deviceInfo.label') | list }}"

- name: Disconnect network adapters using vmware_guest_network
  community.vmware.vmware_guest_network:
    hostname: "{{ vsphere_endpoint }}"
    username: "{{ vsphere_username }}"
    password: "{{ vsphere_password }}"
    validate_certs: "{{ vsphere_validate }}"
    name: "{{ vm_name }}"
    device_type: "{{ item._vimtype.split('.')[-1] | lower }}"
    label: "{{ item.deviceInfo.label }}"
    connected: false
    start_connected: false
    state: present
  delegate_to: localhost
  loop: "{{ _list_network_adapters }}"
  when: _list_network_adapters | length > 0
  register: network_disconnect_result
  ignore_errors: yes

- name: Wait for network disconnection to complete
  pause:
    seconds: 5
  when: _list_network_adapters | length > 0

- name: Add Notes to VM {{ vm_name }} for decommission tracking
  community.vmware.vmware_guest:
    hostname: "{{ vsphere_endpoint }}"
    username: "{{ vsphere_username }}"
    password: "{{ vsphere_password }}"
    validate_certs: "{{ vsphere_validate }}"
    name: "{{ vm_name }}"
    annotation: |
      Decommission scheduled via Ansible Workflow
       • Timestamp         : {{ '%Y-%m-%d %H:%M' | strftime }}
       • Change Request ID : {{ change_request_number }}
       • Initiated By      : {{ workflow_initiator }}
       • VM                : {{ vm_name }}
       • IPv4s from vCenter: {{ _list_ipv4_addresses | default([])}}
       • Network Status    : All adapters disconnected
  delegate_to: localhost

- name: Verify network disconnection status
  community.vmware.vmware_guest_info:
    hostname: "{{ vsphere_endpoint }}"
    username: "{{ vsphere_username }}"
    password: "{{ vsphere_password }}"
    validate_certs: "{{ vsphere_validate }}"
    name: "{{ vm_name }}"
    schema: "vsphere"
    properties:
      - "config.hardware.device"
  delegate_to: localhost
  register: _vm_hardware_info_after

- name: Extract updated network adapter status
  set_fact:
    _updated_list_network_adapters: >-
      {{ _vm_hardware_info_after.instance.config.hardware.device 
          | selectattr('deviceInfo.label', 'match', 'Network adapter.*') 
          | list }}

- name: Display network disconnection results - Final validation summary
  debug:
    msg:
      - "=== VALIDATION SUMMARY ==="
      - "Network disconnection completed for VM: {{ vm_name }} - IPv4 address: {{ vm_ipv4 }}"
      - "VM Power State: {{ _vm_power_state }}"
      - "Total adapters found: {{ _updated_list_network_adapters | length }}"
      - "Adapter labels: {{ _updated_list_network_adapters | map(attribute='deviceInfo.label') | list }}"
      - "Connection status: {{ _updated_list_network_adapters | map(attribute='connectable.connected') | list }}"
      - "MAC addresses: {{ _updated_list_network_adapters | map(attribute='macAddress') | list }}"
      - "IPv4s from vCenter: {{ _list_ipv4_addresses | default([])}}"